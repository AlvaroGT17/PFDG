"""
M√≥dulo que define el hilo `HiloCargaRecepcionamiento`, utilizado para cargar datos
completos de recepcionamiento en segundo plano, sin bloquear la interfaz gr√°fica.

Este hilo utiliza la funci√≥n `obtener_datos_completos_recepcionamiento` del modelo correspondiente
y emite una se√±al al completarse con los datos resultantes.
"""

from PySide6.QtCore import QThread, Signal
from modelos.recepcionamiento_consultas import obtener_datos_completos_recepcionamiento


class HiloCargaRecepcionamiento(QThread):
    """
    Hilo espec√≠fico para cargar los datos del m√≥dulo de recepcionamiento en segundo plano.

    Al finalizar la carga, emite una se√±al con los datos obtenidos en forma de diccionario.
    """

    senal_datos_cargados = Signal(dict)
    """Se√±al emitida cuando los datos han sido cargados correctamente."""

    def run(self):
        """
        M√©todo que se ejecuta cuando se inicia el hilo.

        Carga los datos de recepcionamiento utilizando el modelo correspondiente
        y emite la se√±al `senal_datos_cargados` al completarse. Maneja errores con impresi√≥n por consola.
        """
        try:
            print("üì¶ Cargando datos en segundo plano...")
            datos = obtener_datos_completos_recepcionamiento()
            print("üì¶ Datos listos, emitiendo se√±al...")
            self.senal_datos_cargados.emit(datos)
        except Exception as e:
            print(f"‚ùå Error en hilo de carga de recepcionamiento: {e}")
